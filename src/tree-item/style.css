:host {
  display: flex;
  /*padding: var(--padding);*/
}
:host(:focus) {
  outline: none;
}

:host(:not(:disabled)) :is(.control, .expand-collapse-button) {
  cursor: pointer;
}

:host(:focus-visible) {
  outline: none;
}
:host(:focus-visible)::after {
  content: none;
}

.expand-collapse-button {
  display: flex;
  justify-content: center;
  align-self: flex-start;
  align-items: center;
  box-sizing: border-box;
  min-width: calc(var(--font-size) * var(--line-height));
  min-height: calc(var(--font-size) * var(--line-height));
}

.arrow-right {
  font-size: var(--font-size);
}

.content {
  flex: 1;
}

.control {
  position: relative;
  color: inherit;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  --padding-t: 0;
  --padding-b: 0;
  font-size: inherit;
  padding: var(--padding-t) var(--padding-r) var(--padding-b) var(--padding-l);
}
.control:hover {
  background: var(--background-hover);
}

.group {
  display: block;
}

:host([selected]) .control {
  color: var(--foreground-selected);
  background: var(--background-selected);
}

:host([disabled]) {
  cursor: not-allowed;
}
:host([disabled]) .control,
:host([disabled]) .control:hover {
  color: var(--foreground-disabled);
  background-color: var(--background-disabled);
  background-color: transparent;
}

:host([selected][disabled]) .control {
  background-color: var(--accent-color-disabled);
}
:host([selected][disabled]) .control:hover {
  background-color: var(--accent-color-disabled);
}

:host(:focus-visible) .control:after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  border-radius: var(--border-radius);
  border: var(--outline-width) solid var(--outline-color);
}

:host([indent]) {
  padding-left: calc(var(--font-size) + var(--padding-l) + var(--padding-r));
}
